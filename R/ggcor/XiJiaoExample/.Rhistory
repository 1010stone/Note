install.packages("backports")
install.packages(c("conquer", "glue", "labelled", "tidyr", "vctrs", "zip"))
install.packages("glue")
install.packages("vctrs")
install.packages("glue")
library(ggpubr)
meta = read.table(paste("../wet/batch6/bacteria_meta.txt",sep=""), header=T, row.names=1, sep="\t", comment.char="")
idx = rownames(meta) %in% c("R2567","R2488","R1405","GF","R2413") # R2413在第5批中没有，,"R1515","R2828"
meta = meta[idx,]
library(amplicon)
data = read.table(paste("../wet/batch6/data.txt",sep=""), header=T, row.names=1, sep="\t", comment.char="")
# 提取行名为列
data$ID = rownames(data)
# 合并
data = merge(data, meta, by.x= "GroupID", by.y = "row.names", all.x = T)
data = na.omit(data)
# 还原行名
rownames(data) = data$ID
# level = rownames(meta)
level = c("GF","R2567","R2488","R1405","R2413") # ,"R1515","R2828"
data$GroupID = factor(data$GroupID, levels = level)
# 筛选1-5分蘖，分组和分类
data =  data[,c(1,10:14,17)]
df = melt(data)
knitr::opts_chunk$set(eval = FALSE, include = FALSE)
# Clean workspace
rm(list=ls())
source("http://210.75.224.110/stat_plot_functions.R")
dir.create("fig4", showWarnings=F)
w=89
h=59
library(ggpubr)
meta = read.table(paste("../wet/batch6/bacteria_meta.txt",sep=""), header=T, row.names=1, sep="\t", comment.char="")
idx = rownames(meta) %in% c("R2567","R2488","R1405","GF","R2413") # R2413在第5批中没有，,"R1515","R2828"
meta = meta[idx,]
library(amplicon)
data = read.table(paste("../wet/batch6/data.txt",sep=""), header=T, row.names=1, sep="\t", comment.char="")
# 提取行名为列
data$ID = rownames(data)
# 合并
data = merge(data, meta, by.x= "GroupID", by.y = "row.names", all.x = T)
data = na.omit(data)
# 还原行名
rownames(data) = data$ID
# level = rownames(meta)
level = c("GF","R2567","R2488","R1405","R2413") # ,"R1515","R2828"
data$GroupID = factor(data$GroupID, levels = level)
# 筛选1-5分蘖，分组和分类
data =  data[,c(1,10:14,17)]
df = melt(data)
levels(df$variable) = c(1:5)
p = ggbarplot(df, x = "GroupID", y = "value", fill = "variable", add = "mean_se",position = position_dodge(0.8))+
theme(legend.position = "right", axis.text.x = element_text(angle = 45,vjust=1, hjust=1)) + main_theme
# + stat_compare_means(aes(label = ..p.signif..),method = "t.test", ref.group = "GF")
p
ggsave(paste0("fig4/b6_tiller_1-5.pdf"), p, width = w*2.1, height = h, units = "mm")
p
library(ggpubr)
meta = read.table(paste("../wet/batch6/bacteria_meta.txt",sep=""), header=T, row.names=1, sep="\t", comment.char="")
View(meta)
idx = rownames(meta) %in% c("GF","R2488","R2149","R182","R2828")
meta = meta[idx,]
library(amplicon)
data = read.table(paste("../wet/batch9/data.txt",sep=""), header=T, row.names=1, sep="\t", comment.char="")
# 提取行名为列
data$ID = rownames(data)
# 合并
data = merge(data, meta, by.x= "GroupID", by.y = "row.names", all.x = T)
data = na.omit(data)
# 还原行名
rownames(data) = data$ID
# level = rownames(meta)
level = c("GF","R2488","R2149","R182","R2828")
data$GroupID = factor(data$GroupID, levels = level)
View(data)
library(ggpubr)
meta = read.table(paste("../wet/batch6/bacteria_meta.txt",sep=""), header=T, row.names=1, sep="\t", comment.char="")
idx = rownames(meta) %in% c("R2567","R2488","R1405","GF","R2413") # R2413在第5批中没有，,"R1515","R2828"
meta = meta[idx,]
library(amplicon)
data = read.table(paste("../wet/batch6/data.txt",sep=""), header=T, row.names=1, sep="\t", comment.char="")
# 提取行名为列
data$ID = rownames(data)
# 合并
data = merge(data, meta, by.x= "GroupID", by.y = "row.names", all.x = T)
data = na.omit(data)
# 还原行名
rownames(data) = data$ID
# level = rownames(meta)
level = c("GF","R2567","R2488","R1405","R2413") # ,"R1515","R2828"
data$GroupID = factor(data$GroupID, levels = level)
# 筛选1-5分蘖，分组和分类
data =  data[,c(1,10:14,17)]
df = melt(data)
levels(df$variable) = c(1:5)
p = ggbarplot(df, x = "GroupID", y = "value", fill = "variable", add = "mean_se",position = position_dodge(0.8))+
theme(legend.position = "right", axis.text.x = element_text(angle = 45,vjust=1, hjust=1)) + main_theme
# + stat_compare_means(aes(label = ..p.signif..),method = "t.test", ref.group = "GF")
p
ggsave(paste0("fig4/b6_tiller_1-5.pdf"), p, width = w*2.1, height = h, units = "mm")
head(data)
library(ggpubr)
meta = read.table(paste("../wet/batch6/bacteria_meta.txt",sep=""), header=T, row.names=1, sep="\t", comment.char="")
idx = rownames(meta) %in% c("GF","R2488","R2149","R182","R2828")
meta = meta[idx,]
library(amplicon)
data = read.table(paste("../wet/batch9/data.txt",sep=""), header=T, row.names=1, sep="\t", comment.char="")
# 提取行名为列
data$ID = rownames(data)
# 合并
data = merge(data, meta, by.x= "GroupID", by.y = "row.names", all.x = T)
data = na.omit(data)
# 还原行名
rownames(data) = data$ID
# level = rownames(meta)
level = c("GF","R2488","R2149","R182","R2828")
data$GroupID = factor(data$GroupID, levels = level)
View(data)
head(data[,c(1,6:10,16)])
# 筛选1-5分蘖，分组和相关分类
data =  data[,c(1,6:10,16)]
df = melt(data)
levels(df$variable) = c(1:5)
p = ggbarplot(df, x = "GroupID", y = "value", fill = "variable", add = "mean_se",position = position_dodge(0.8))+
theme(legend.position = "right", axis.text.x = element_text(angle = 45,vjust=1, hjust=1)) + main_theme
# + stat_compare_means(aes(label = ..p.signif..),method = "t.test", ref.group = "GF")
p
ggsave(paste0("fig4/b9_tiller_1-5.pdf"), p, width = w*2.1, height = h, units = "mm")
library(ggpubr)
# batch6筛选5组
idx = rownames(meta) %in% c("R2567","R2488","R1405","GF","R2413") # R2413在第5批中没有，,"R1515","R2828"
# batch6筛选5组
data6 = read.table(paste("../wet/batch6/data.txt",sep=""), header=T, row.names=1, sep="\t", comment.char="")
head(data6)
# batch6筛选5组
list1 = c("GF","R2567","R2488","R1405","R2413")
data6 = read.table(paste("../wet/batch6/data.txt",sep=""), header=T, row.names=1, sep="\t", comment.char="")
data6 = data6[data6$GroupID %in% list1,]
head(data6)
data6 = data6[data6$GroupID %in% list1, c("GroupID","FirstTillerLength","SecondTillerLength", "ThirdTillerLength", "FourthTillerLength", "FifthTillerLength")]
# batch9筛选3组
list1 = c("R2149","R182","R2828")
# batch9筛选3组
list1 = c("R2149","R182","R2828")
data9 = read.table(paste("../wet/batch9/data.txt",sep=""), header=T, row.names=1, sep="\t", comment.char="")
data9 = data9[data9$GroupID %in% list1, c("GroupID","FirstTillerLength","SecondTillerLength", "ThirdTillerLength", "FourthTillerLength", "FifthTillerLength")]
head(data9)
# batch9筛选3组
list1 = c("R2149","R182","R2828")
data9 = read.table(paste("../wet/batch9/data.txt",sep=""), header=T, row.names=1, sep="\t", comment.char="")
data9 = data9[data9$GroupID %in% list1, c("GroupID","FirstTillerLength","SecondTillerLength", "ThirdTillerLength", "FourthTillerLength", "FifthTillerLength")]
# 合并
data = rbind(data6,data9)
data = na.omit(data)
# 合并
data = rbind(data6,data9)
data = na.omit(data)
level = c("GF","R2567","R2488","R1405","R2413","R2149","R182","R2828")
data$GroupID = factor(data$GroupID, levels = level)
# 筛选1-5分蘖，分组和分类
df = melt(data)
levels(df$variable)
levels(df$variable) = c(1:5)
p = ggbarplot(df, x = "GroupID", y = "value", fill = "variable", add = "mean_se",position = position_dodge(0.8))+
theme(legend.position = "right", axis.text.x = element_text(angle = 45,vjust=1, hjust=1)) + main_theme
# + stat_compare_means(aes(label = ..p.signif..),method = "t.test", ref.group = "GF")
p
ggsave(paste0("fig4/bGF7tiller_1-5.pdf"), p, width = w*2.1, height = h, units = "mm")
library(ggcor)
?devtools::install_github
setwd("D:/work/github/Note/R/ggcor")
knitr::opts_chunk$set(echo = TRUE)
if(!require(devtools))
install.packages("devtools")
# if(!require(ggcor))
#   devtools::install_github("houyunhuang/ggcor")
devtools::install_local("./ggcor_0.9.7.tar.gz")
install.packages(c("ggalluvial", "questionr", "vctrs"))
?ggcor
knitr::opts_chunk$set(echo = TRUE)
library(ggcor)
?ggcor
df <- fortify_cor(mtcars)
ggcor(df)
df01 <- fortify_cor(mtcars, type = "lower", show.diag = FALSE)
ggcor(df01, axis.label.drop = TRUE)
df <- fortify_cor(mtcars)
ggcor(df)
df01 <- fortify_cor(mtcars, type = "lower", show.diag = FALSE)
ggcor(df01, axis.label.drop = TRUE)
setwd("D:/work/github/Note/R/ggcor/新建文件夹")
spec <- readr::read_csv(file = file.choose())
env <- readr::read_csv(file = file.choose())
corr <- fortify_cor(env, type = "upper", cor.test = TRUE)
corr2 <- fortify_cor(spec, env, cor.test = TRUE) %>%
filter(p.value < 0.05) %>%
mutate(rd = cut(r, breaks = c(-Inf, 0, Inf),
labels = c("< 0", ">= 0"),
right = FALSE))
quickcor(corr) +
geom_square(colour = NA) +
geom_cross(colour = "grey60", size = 0.4) +
anno_link(aes(x = x + 1, colour = rd, linetype = rd, size = abs(r)), data = corr2,
node.size = c(6, 5), node.shape = c(24, 21),
node.colour = NA, node.fill = c("red", "grey60")) +
anno_link_label(size = 4.5, nudge_x = -0.5) +
scale_fill_gradient2n(colours = rev(red_blue()),
breaks = c(-1, -0.5, 0, 0.5, 1),
limits = c(-1, 1)) +
scale_color_manual(values = c("#FF7F00", "#4DAF4A")) +
scale_linetype_manual(values = c("dashed", "solid")) +
scale_size(range = c(0.25, 2), breaks = c(0.4, 0.5, 0.6, 0.7, 0.8), limits = c(0.4, 0.8)) +
guides(size = guide_legend(override.aes = list(colour = "grey35"), order = 3),
fill = guide_colorbar(title = "Corr", order = 100))
ggsave("xi.pdf", width = 13, height = 9, dpi = 600)
library(ggplot2)
library(ggplot2)
spec <- readr::read_csv(file = file.choose())
env <- readr::read_csv(file = file.choose())
corr <- fortify_cor(env, type = "upper", cor.test = TRUE)
corr2 <- fortify_cor(spec, env, cor.test = TRUE) %>%
filter(p.value < 0.05) %>%
mutate(rd = cut(r, breaks = c(-Inf, 0, Inf),
labels = c("< 0", ">= 0"),
right = FALSE))
quickcor(corr) +
geom_square(colour = NA) +
geom_cross(colour = "grey60", size = 0.4) +
anno_link(aes(x = x + 1, colour = rd, linetype = rd, size = abs(r)), data = corr2,
node.size = c(6, 5), node.shape = c(24, 21),
node.colour = NA, node.fill = c("red", "grey60")) +
anno_link_label(size = 4.5, nudge_x = -0.5) +
scale_fill_gradient2n(colours = rev(red_blue()),
breaks = c(-1, -0.5, 0, 0.5, 1),
limits = c(-1, 1)) +
scale_color_manual(values = c("#FF7F00", "#4DAF4A")) +
scale_linetype_manual(values = c("dashed", "solid")) +
scale_size(range = c(0.25, 2), breaks = c(0.4, 0.5, 0.6, 0.7, 0.8), limits = c(0.4, 0.8)) +
guides(size = guide_legend(override.aes = list(colour = "grey35"), order = 3),
fill = guide_colorbar(title = "Corr", order = 100))
ggsave("xi.pdf", width = 13, height = 9, dpi = 600)
